{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","props","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","to","concat","Poster_Container","require","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","nowPlaying","upcoming","popular","error","loading","Fragment","Helmet_default","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","poster_path","original_title","vote_average","release_date","Components_Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","first_air_date","TVContainer","TV_TVPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","_this","searchByTerm","target","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","_templateObject7","Item","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","Detail_DetailPresenter","Header","header","Header_templateObject","List","ul","Header_templateObject2","li","Header_templateObject3","current","SLink","Link","Header_templateObject4","withRouter","Header_Item","Router","Components_Header","react_router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gsBCKxC,IAAMC,EAAYC,UAAOC,IAAVC,KAMTC,EAAQH,UAAOI,KAAVC,KAKLC,EAAON,UAAOC,IAAVM,KAsBKC,EAfC,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,SAAV,OACZC,EAAAC,EAAAC,cAACf,EAAD,KACIa,EAAAC,EAAAC,cAACX,EAAD,KAAQO,GACRE,EAAAC,EAAAC,cAACR,EAAD,KAAOK,kNCvBf,IAAMZ,EAAYC,UAAOC,IAAVc,KASAC,EAAA,kBACXJ,EAAAC,EAAAC,cAACG,EAAD,KACIL,EAAAC,EAAAC,cAAA,QAAMI,KAAK,MAAMC,aAAW,WAA5B,gPCVR,IAAMpB,EAAYC,UAAOC,IAAVmB,KAMTC,EAAOrB,UAAOI,KAAVkB,IACG,SAAAC,GAAK,OAAIA,EAAMC,QAcbC,EAXC,SAAAhB,GAAA,IAAGiB,EAAHjB,EAAGiB,KAAMF,EAATf,EAASe,MAAT,OACZZ,EAAAC,EAAAC,cAACa,EAAD,KACIf,EAAAC,EAAAC,cAACO,EAAD,CAAMG,MAAOA,GAAQE,4gCCX7B,IAAM3B,EAAYC,UAAOC,IAAV2B,KAITC,EAAQ7B,UAAOC,IAAV6B,IACiB,SAAAP,GAAK,OAAIA,EAAMQ,QAQrCC,EAAShC,UAAOI,KAAV6B,KAQNC,EAAiBlC,UAAOC,IAAVkC,IAIVN,EAGAG,GAMJ7B,EAAQH,UAAOI,KAAVgC,KAKLC,EAAOrC,UAAOI,KAAVkC,KAwCKC,EAnCA,SAAA9B,GAAA,IAAG+B,EAAH/B,EAAG+B,GAAIC,EAAPhC,EAAOgC,SAAU/B,EAAjBD,EAAiBC,MAAOgC,EAAxBjC,EAAwBiC,OAAQC,EAAhClC,EAAgCkC,KAAhCC,EAAAnC,EAAsCoC,eAAtC,IAAAD,KAAA,OACXhC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMC,GAAIF,EAAO,UAAAG,OAAaR,GAAb,SAAAQ,OAA6BR,IAC1C5B,EAAAC,EAAAC,cAACmC,EAAD,KACIrC,EAAAC,EAAAC,cAACoB,EAAD,KACItB,EAAAC,EAAAC,cAACe,EAAD,CACIE,MACIU,EAAQ,kCAAAO,OACgCP,GAClCS,EAAQ,MAGtBtC,EAAAC,EAAAC,cAACkB,EAAD,KACIpB,EAAAC,EAAAC,cAAA,QAAMI,KAAK,MAAMC,aAAW,UAA5B,gBAEQ,IACPuB,EAJL,QAOJ9B,EAAAC,EAAAC,cAACqC,EAAD,KACKzC,EAAM0C,OAAS,GAAf,GAAAJ,OAAuBtC,EAAM2C,UAAU,EAAG,IAA1C,OAAqD3C,GAE1DE,EAAAC,EAAAC,cAACuB,EAAD,KAAOM,iGC5DnB,IAAM5C,EAAYC,UAAOC,IAAVqD,KA6EAC,EAzEO,SAAA9C,GAAA,IAAG+C,EAAH/C,EAAG+C,WAAYC,EAAfhD,EAAegD,SAAUC,EAAzBjD,EAAyBiD,QAASC,EAAlClD,EAAkCkD,MAAOC,EAAzCnD,EAAyCmD,QAAzC,OAClBhD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgD,SAAA,KACIjD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,KACID,EAAAC,EAAAC,cAAA,kCAEH8C,EACGhD,EAAAC,EAAAC,cAACE,EAAD,MAEAJ,EAAAC,EAAAC,cAACiD,EAAD,KACInD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,KACID,EAAAC,EAAAC,cAAA,kCAEH0C,GAAcA,EAAWJ,OAAS,GAC/BxC,EAAAC,EAAAC,cAACkD,EAAD,CAAStD,MAAM,eACV8C,EAAWS,IAAI,SAAAC,GAAK,OACjBtD,EAAAC,EAAAC,cAACqD,EAAD,CACIC,IAAKF,EAAM1B,GACXA,GAAI0B,EAAM1B,GACVC,SAAUyB,EAAMG,YAChB3D,MAAOwD,EAAMI,eACb5B,OAAQwB,EAAMK,aACd5B,KAAMuB,EAAMM,aAAanB,UAAU,EAAG,GACtCR,SAAS,OAMxBY,GAAYA,EAASL,OAAS,GAC3BxC,EAAAC,EAAAC,cAACkD,EAAD,CAAStD,MAAM,mBACV+C,EAASQ,IAAI,SAAAC,GAAK,OACftD,EAAAC,EAAAC,cAACqD,EAAD,CACIC,IAAKF,EAAM1B,GACXA,GAAI0B,EAAM1B,GACVC,SAAUyB,EAAMG,YAChB3D,MAAOwD,EAAMI,eACb5B,OAAQwB,EAAMK,aACd5B,KAAMuB,EAAMM,aAAanB,UAAU,EAAG,GACtCR,SAAS,OAMxBa,GAAWA,EAAQN,OAAS,GACzBxC,EAAAC,EAAAC,cAACkD,EAAD,CAAStD,MAAM,kBACVgD,EAAQO,IAAI,SAAAC,GAAK,OACdtD,EAAAC,EAAAC,cAACqD,EAAD,CACIC,IAAKF,EAAM1B,GACXA,GAAI0B,EAAM1B,GACVC,SAAUyB,EAAMG,YAChB3D,MAAOwD,EAAMI,eACb5B,OAAQwB,EAAMK,aACd5B,KAAMuB,EAAMM,aAAanB,UAAU,EAAG,GACtCR,SAAS,OAKxBc,GAAS/C,EAAAC,EAAAC,cAAC2D,EAAD,CAASjD,MAAM,UAAUE,KAAMiC,eCtEnDe,SAAMC,EAAMC,OAAO,CACrBC,QAAS,gCACTC,OAAQ,CACJC,QAAS,mCACTC,SAAU,WAILC,GAAY,CACrBzB,WAAY,kBAAMkB,EAAIQ,IAAI,sBAC1BzB,SAAU,kBAAMiB,EAAIQ,IAAI,mBACxBxB,QAAS,kBAAMgB,EAAIQ,IAAI,kBACvBC,YAAa,SAAA3C,GAAE,OACXkC,EAAIQ,IAAJ,SAAAlC,OAAiBR,GAAM,CACnBsC,OAAQ,CACJM,mBAAoB,aAGhCC,OAAQ,SAAAC,GAAI,OACRZ,EAAIQ,IAAI,eAAgB,CACpBJ,OAAQ,CACJS,MAAOC,mBAAmBF,QAK7BG,GAAQ,CACjBC,SAAU,kBAAMhB,EAAIQ,IAAI,iBACxBxB,QAAS,kBAAMgB,EAAIQ,IAAI,eACvBS,YAAa,kBAAMjB,EAAIQ,IAAI,oBAC3BU,WAAY,SAAApD,GAAE,OACVkC,EAAIQ,IAAJ,MAAAlC,OAAcR,GAAM,CAChBsC,OAAQ,CACJM,mBAAoB,aAGhCC,OAAQ,SAAAC,GAAI,OACRZ,EAAIQ,IAAI,YAAa,CACjBJ,OAAQ,CACJS,MAAOC,mBAAmBF,QCxC3BO,8MCGXC,MAAQ,CACJtC,WAAY,KACZC,SAAU,KACVC,QAAS,KACTC,MAAO,KACPC,SAAS,uOAOKqB,GAAUzB,oCADCA,IAAjBuC,KAAQC,iBAIFf,GAAUxB,kCADCA,IAAjBsC,KAAQC,kBAIFf,GAAUvB,2BADCA,IAAjBqC,KAAQC,QAGZC,KAAKC,SAAS,CACV1C,aACAC,WACAC,8DAIJuC,KAAKC,SAAS,CACVvC,MAAO,2DAGXsC,KAAKC,SAAS,CACVtC,SAAS,oKAIZ,IAAAuC,EACqDF,KAAKH,MAAvDtC,EADH2C,EACG3C,WAAYC,EADf0C,EACe1C,SAAUC,EADzByC,EACyBzC,QAASC,EADlCwC,EACkCxC,MAAOC,EADzCuC,EACyCvC,QAC9C,OACIhD,EAAAC,EAAAC,cAACsF,EAAD,CACI5C,WAAYA,EACZC,SAAUA,EACVC,QAASA,EACTC,MAAOA,EACPC,QAASA,WA7CIyC,IAAMC,wGCKnC,IAAMvG,GAAYC,UAAOC,IAAVsG,MAsEAC,GAnEK,SAAA/F,GAAA,IAAGiF,EAAHjF,EAAGiF,SAAUhC,EAAbjD,EAAaiD,QAASiC,EAAtBlF,EAAsBkF,YAAa/B,EAAnCnD,EAAmCmD,QAASD,EAA5ClD,EAA4CkD,MAA5C,OAChB/C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgD,SAAA,KACIjD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,KACID,EAAAC,EAAAC,cAAA,oCAEH8C,EACGhD,EAAAC,EAAAC,cAACE,EAAD,MAEAJ,EAAAC,EAAAC,cAAC2F,GAAD,KACKf,GAAYA,EAAStC,OAAS,GAC3BxC,EAAAC,EAAAC,cAACkD,EAAD,CAAStD,MAAM,mBACVgF,EAASzB,IAAI,SAAAyC,GAAI,OACd9F,EAAAC,EAAAC,cAACqD,EAAD,CACIC,IAAKsC,EAAKlE,GACVA,GAAIkE,EAAKlE,GACTC,SAAUiE,EAAKrC,YACf3D,MAAOgG,EAAKC,cACZjE,OAAQgE,EAAKnC,aACb5B,KAAM+D,EAAKE,eAAevD,UAAU,EAAG,QAMtDK,GAAWA,EAAQN,OAAS,GACzBxC,EAAAC,EAAAC,cAACkD,EAAD,CAAStD,MAAM,iBACVgD,EAAQO,IAAI,SAAAyC,GAAI,OACb9F,EAAAC,EAAAC,cAACqD,EAAD,CACIC,IAAKsC,EAAKlE,GACVA,GAAIkE,EAAKlE,GACTC,SAAUiE,EAAKrC,YACf3D,MAAOgG,EAAKC,cACZjE,OAAQgE,EAAKnC,aACb5B,KAAM+D,EAAKE,eAAevD,UAAU,EAAG,QAMtDsC,GAAeA,EAAYvC,OAAS,GACjCxC,EAAAC,EAAAC,cAACkD,EAAD,CAAStD,MAAM,gBACViF,EAAY1B,IAAI,SAAAyC,GAAI,OACjB9F,EAAAC,EAAAC,cAACqD,EAAD,CACIC,IAAKsC,EAAKlE,GACVA,GAAIkE,EAAKlE,GACTC,SAAUiE,EAAKrC,YACf3D,MAAOgG,EAAKC,cACZjE,OAAQgE,EAAKnC,aACb5B,KAAM+D,EAAKE,eAAevD,UAAU,EAAG,QAKtDM,GAAS/C,EAAAC,EAAAC,cAAC2D,EAAD,CAASjD,MAAM,UAAUE,KAAMiC,OC/D1CkD,8MCGXf,MAAQ,CACJJ,SAAU,KACVhC,QAAS,KACTiC,YAAa,KACb/B,SAAS,EACTD,MAAO,0OAOO8B,GAAMC,kCADKA,IAAjBK,KAAQC,iBAIFP,GAAM/B,iCADKA,IAAjBqC,KAAQC,kBAIFP,GAAME,+BADKA,IAAjBI,KAAQC,QAGZC,KAAKC,SAAS,CAAER,WAAUhC,UAASiC,kEAEnCM,KAAKC,SAAS,CACVvC,MAAO,uDAGXsC,KAAKC,SAAS,CAAEtC,SAAS,oKAIxB,IAAAuC,EACsDF,KAAKH,MAAxDJ,EADHS,EACGT,SAAUhC,EADbyC,EACazC,QAASiC,EADtBQ,EACsBR,YAAa/B,EADnCuC,EACmCvC,QAASD,EAD5CwC,EAC4CxC,MACjD,OACI/C,EAAAC,EAAAC,cAACgG,GAAD,CACIpB,SAAUA,EACVhC,QAASA,EACTiC,YAAaA,EACb/B,QAASA,EACTD,MAAOA,WAvCM0C,IAAMC,+VCKnC,IAAMvG,GAAYC,UAAOC,IAAV8G,MAITC,GAAOhH,UAAOiH,KAAVC,MAKJC,GAAQnH,UAAOoH,MAAVC,MAyEIC,GAnES,SAAA7G,GAAA,IAAG8G,EAAH9G,EAAG8G,aAAcC,EAAjB/G,EAAiB+G,UAAW5D,EAA5BnD,EAA4BmD,QAASD,EAArClD,EAAqCkD,MAAO8D,EAA5ChH,EAA4CgH,WAAYC,EAAxDjH,EAAwDiH,aAAcC,EAAtElH,EAAsEkH,WAAtE,OACpB/G,EAAAC,EAAAC,cAAC8G,GAAD,KACIhH,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,KACID,EAAAC,EAAAC,cAAA,kCAEJF,EAAAC,EAAAC,cAACkG,GAAD,CAAMa,SAAUH,GACZ9G,EAAAC,EAAAC,cAACqG,GAAD,CACIW,YAAY,+BACZC,MAAON,EACPO,SAAUL,KAGjB/D,EACGhD,EAAAC,EAAAC,cAACE,EAAD,MAEAJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgD,SAAA,KACK0D,GAAgBA,EAAanE,OAAS,GACnCxC,EAAAC,EAAAC,cAACkD,EAAD,CAAStD,MAAM,iBACV6G,EAAatD,IAAI,SAAAC,GAAK,OACnBtD,EAAAC,EAAAC,cAACqD,EAAD,CACIC,IAAKF,EAAM1B,GACXA,GAAI0B,EAAM1B,GACVC,SAAUyB,EAAMG,YAChB3D,MAAOwD,EAAMI,eACb5B,OAAQwB,EAAMK,aACd5B,KAAMuB,EAAMM,aAAanB,UAAU,EAAG,GACtCR,SAAS,OAMxB2E,GAAaA,EAAUpE,OAAS,GAC7BxC,EAAAC,EAAAC,cAACkD,EAAD,CAAStD,MAAM,mBACV8G,EAAUvD,IAAI,SAAAyC,GAAI,OACf9F,EAAAC,EAAAC,cAACqD,EAAD,CACIC,IAAKsC,EAAKlE,GACVA,GAAIkE,EAAKlE,GACTC,SAAUiE,EAAKrC,YACf3D,MAAOgG,EAAKC,cACZjE,OAAQgE,EAAKnC,aACb5B,KAAM+D,EAAKE,eAAevD,UAAU,EAAG,QAKtDM,GAAS/C,EAAAC,EAAAC,cAAC2D,EAAD,CAASjD,MAAM,UAAUE,KAAMiC,IACxC6D,GACCD,GACuB,IAArBC,EAAUpE,QACgB,IAAxBmE,EAAanE,QACXxC,EAAAC,EAAAC,cAAC2D,EAAD,CAAS/C,KAAK,gBAAgBF,MAAM,eCzE7CyG,8MCGXnC,MAAQ,CACJyB,aAAc,KACdC,UAAW,KACXC,WAAY,GACZ7D,SAAS,EACTD,MAAO,QAGX+D,aAAe,SAACQ,GACZA,EAAMC,iBAEY,KADKC,EAAKtC,MAApB2B,YAEJW,EAAKC,kBAIbV,WAAa,SAACO,GAAU,IAENH,EACVG,EADAI,OAAUP,MAEdK,EAAKlC,SAAS,CACVuB,WAAYM,OAIpBM,kCAAe,SAAAE,IAAA,IAAAd,EAAAe,EAAAjB,EAAAkB,EAAAjB,EAAA,OAAAkB,EAAA7H,EAAA8H,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACHrB,EAAeW,EAAKtC,MAApB2B,WACRW,EAAKlC,SAAS,CAAEtC,SAAS,IAFdgF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMG7D,GAAUI,OAAOoC,GANpB,cAAAe,EAAAI,EAAAG,KAKcxB,EALdiB,EAKHzC,KAAQC,QALL4C,EAAAE,KAAA,EASGrD,GAAMJ,OAAOoC,GAThB,OAAAgB,EAAAG,EAAAG,KAQcvB,EARdiB,EAQH1C,KAAQC,QAGZoC,EAAKlC,SAAS,CACVqB,eACAC,cAbGoB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAI,GAAAJ,EAAA,SAiBPR,EAAKlC,SAAS,CACVvC,MAAO,wBAlBJ,eAAAiF,EAAAC,KAAA,GAqBPT,EAAKlC,SAAS,CACVtC,SAAS,IAtBNgF,EAAAK,OAAA,6BAAAL,EAAAM,SAAAX,EAAA,gGA2BN,IAAApC,EAC2DF,KAAKH,MAA7DyB,EADHpB,EACGoB,aAAcC,EADjBrB,EACiBqB,UAAW5D,EAD5BuC,EAC4BvC,QAASD,EADrCwC,EACqCxC,MAAO8D,EAD5CtB,EAC4CsB,WACjD,OACI7G,EAAAC,EAAAC,cAACqI,GAAD,CACI5B,aAAcA,EACdC,UAAWA,EACX5D,QAASA,EACTD,MAAOA,EACP8D,WAAYA,EACZC,aAAczB,KAAKyB,aACnBC,WAAY1B,KAAK0B,oBA/DJtB,IAAMC,ggDCEnC,IAAMvG,GAAYC,UAAOC,IAAVmJ,MAOTC,GAAWrJ,UAAOC,IAAVqJ,KAMc,SAAA/H,GAAK,OAAIA,EAAMgI,UAQrCC,GAAUxJ,UAAOC,IAAVwJ,MAQPC,GAAQ1J,UAAOC,IAAV0J,KAEiB,SAAApI,GAAK,OAAIA,EAAMgI,UAOrCK,GAAO5J,UAAOC,IAAV4J,MAKJ1J,GAAQH,UAAO8J,GAAVC,MAILC,GAAgBhK,UAAOC,IAAVgK,MAIbC,GAAOlK,UAAOI,KAAV+J,MAEJC,GAAUpK,UAAOI,KAAViK,MAIPC,GAAWtK,UAAOF,EAAVyK,MAqECC,GA9DS,SAAA/J,GAAA,IAAGgK,EAAHhK,EAAGgK,OAAQ7G,EAAXnD,EAAWmD,QAAXnD,EAAoBkD,MAApB,OACpBC,EACIhD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgD,SAAA,KACIjD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,KACID,EAAAC,EAAAC,cAAA,mCAEJF,EAAAC,EAAAC,cAACE,EAAD,OAGJJ,EAAAC,EAAAC,cAAC4J,GAAD,KACI9J,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,KACID,EAAAC,EAAAC,cAAA,aACK2J,EAAOnG,eAAiBmG,EAAOnG,eAAiBmG,EAAO9D,cAAe,MAG/E/F,EAAAC,EAAAC,cAACuI,GAAD,CAAUE,QAAO,sCAAAvG,OAAwCyH,EAAOE,iBAChE/J,EAAAC,EAAAC,cAAC0I,GAAD,KACI5I,EAAAC,EAAAC,cAAC4I,GAAD,CACIH,QACIkB,EAAOpG,YAAP,sCAAArB,OAC4CyH,EAAOpG,aAC5CnB,EAAQ,MAGvBtC,EAAAC,EAAAC,cAAC8I,GAAD,KACIhJ,EAAAC,EAAAC,cAAC8J,GAAD,KACKH,EAAOnG,eACFmG,EAAOnG,eACPmG,EAAO9D,eAEjB/F,EAAAC,EAAAC,cAACkJ,GAAD,KACIpJ,EAAAC,EAAAC,cAACoJ,GAAD,KACKO,EAAOjG,aACFiG,EAAOjG,aAAanB,UAAU,EAAE,GAChCoH,EAAO7D,eAAevD,UAAU,EAAG,IAE7CzC,EAAAC,EAAAC,cAACsJ,GAAD,eACAxJ,EAAAC,EAAAC,cAACoJ,GAAD,KACKO,EAAOI,QAAUJ,EAAOI,QAAUJ,EAAOK,iBAAiB,GAD/D,QAGAlK,EAAAC,EAAAC,cAACsJ,GAAD,eACAxJ,EAAAC,EAAAC,cAACoJ,GAAD,KACKO,EAAOM,QACJN,EAAOM,OAAO9G,IAAI,SAAC+G,EAAOC,GAAR,OACdA,IAAUR,EAAOM,OAAO3H,OAAS,EAC7B4H,EAAME,KADV,GAAAlI,OAEOgI,EAAME,KAFb,WAMhBtK,EAAAC,EAAAC,cAACwJ,GAAD,KAAWG,EAAOU,cCtHvBC,eCGX,SAAAC,EAAY9J,GAAO,IAAA6G,EAAAkD,OAAAC,EAAA,EAAAD,CAAArF,KAAAoF,GACfjD,EAAAkD,OAAAE,EAAA,EAAAF,CAAArF,KAAAqF,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAzF,KAAM1E,IADS,IAGCoK,EACZpK,EADAqK,SAAYD,SAHD,OAMfvD,EAAKtC,MAAQ,CACT2E,OAAQ,KACR9G,MAAO,KACPC,SAAS,EACTf,QAAS8I,EAASE,SAAS,YAVhBzD,oNAoBXnC,KAAK1E,MAHSiB,IADdsJ,MACIhH,OAAUtC,GAEHuJ,IAAXC,QAAWD,KAEPlJ,EAAYoD,KAAKH,MAAjBjD,QACFoJ,EAAWC,SAAS1J,IACvB2J,MAAMF,4CACEF,EAAK,gBAGZtB,EAAS,eAEN5H,oCAC2BoC,GAAUE,YAAY8G,oBAAvCxB,IAAN1E,8CAEuBN,GAAMG,WAAWqG,oBAAlCxB,IAAN1E,+DAGPE,KAAKC,SAAS,CAAEvC,MAAO,iDAEvBsC,KAAKC,SAAS,CAAEtC,SAAS,EAAO6G,2KAG/B,IAAAtE,EAC8BF,KAAKH,MAAhC2E,EADHtE,EACGsE,OAAQ9G,EADXwC,EACWxC,MAAOC,EADlBuC,EACkBvC,QACvB,OAAOhD,EAAAC,EAAAC,cAACsL,GAAD,CAAiB3B,OAAQA,EAAQ9G,MAAOA,EAAOC,QAASA,WA3C1CyC,IAAMC,20BCAnC,IAAM+F,GAASrM,UAAOsM,OAAVC,MAeNC,GAAOxM,UAAOyM,GAAVC,MAIJxC,GAAOlK,UAAO2M,GAAVC,KAKA,SAAArL,GAAK,OAAKA,EAAMsL,QAAU,UAAY,gBAI1CC,GAAQ9M,kBAAO+M,IAAP/M,CAAHgN,MAOIC,eAAW,SAAAxM,GAAA,IAAekL,EAAflL,EAAGmL,SAAYD,SAAf,OACtB/K,EAAAC,EAAAC,cAACuL,GAAD,KACIzL,EAAAC,EAAAC,cAAC0L,GAAD,KACI5L,EAAAC,EAAAC,cAACoM,GAAD,CAAML,QAAsB,MAAblB,GACX/K,EAAAC,EAAAC,cAACgM,GAAD,CAAO/J,GAAG,KAAV,WAEJnC,EAAAC,EAAAC,cAACoM,GAAD,CAAML,QAAsB,QAAblB,GACX/K,EAAAC,EAAAC,cAACgM,GAAD,CAAO/J,GAAG,OAAV,OAEJnC,EAAAC,EAAAC,cAACoM,GAAD,CAAML,QAAsB,YAAblB,GACX/K,EAAAC,EAAAC,cAACgM,GAAD,CAAO/J,GAAG,WAAV,eCpCDoK,GAAA,kBACbvM,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgD,SAAA,KACIjD,EAAAC,EAAAC,cAACsM,GAAD,MACAxM,EAAAC,EAAAC,cAACuM,EAAA,EAAD,KACEzM,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC7M,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAOC,KAAK,MAAMC,OAAK,EAACC,UAAWE,KACnC9M,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAOC,KAAK,UAAUC,OAAK,EAACC,UAAWG,KACvC/M,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAOC,KAAK,aAAaE,UAAWI,KACpChN,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAOC,KAAK,YAAYE,UAAWI,KACnChN,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAUQ,KAAK,IAAI9K,GAAG,0gBCnBhC,IAkBe+K,GAlBMC,4BAAHC,KACZC,MCUSC,oLATX,OACCtN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgD,SAAA,KACCjD,EAAAC,EAAAC,cAACqM,GAAD,MACAvM,EAAAC,EAAAC,cAACqN,GAAD,cALY7H,aCAlB8H,IAASC,OAAOzN,EAAAC,EAAAC,cAACwN,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.bbed2651.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\n// last-child만 제외하고 적용 (:not)\nconst Container = styled.div`\n    :not(:last-child) { \n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n`;\n\nexport default () => (\n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">\n            ⏰\n        </span>\n    </Container>\n);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n);\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n};\n\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n    bottom: 5px;\n    right: 5px;\n    position: absolute;\n    opacity: 0;\n    transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover {\n        ${Image} {\n            opacity: 0.3;\n        }\n        ${Rating} {\n            opacity: 1;\n        }\n    }\n`;\n\nconst Title = styled.span`\n    display: block;\n    margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image \n                    bgUrl={\n                        imageUrl\n                            ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                            : require(\"../assets/noPosterSmall.png\")\n                    } \n                />\n                <Rating>\n                    <span role=\"img\" aria-label=\"rating\">\n                        ⭐️\n                    </span>{\" \"}\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>\n                {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n            </Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n};\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n    <>\n        <Helmet>\n            <title>Movies | Netflix</title>\n        </Helmet>\n        {loading ? (\n            <Loader /> \n            ) : (\n            <Container>\n                <Helmet>\n                    <title>Movies | Netflix</title>\n                </Helmet>\n                {nowPlaying && nowPlaying.length > 0 && (\n                    <Section title=\"Now Playing\">\n                        {nowPlaying.map(movie => (\n                            <Poster \n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.original_title}\n                                rating={movie.vote_average}\n                                year={movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n                \n                {upcoming && upcoming.length > 0 && (\n                    <Section title=\"Upcoming Movies\">\n                        {upcoming.map(movie => (\n                            <Poster \n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.original_title}\n                                rating={movie.vote_average}\n                                year={movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n\n                {popular && popular.length > 0 && (\n                    <Section title=\"Popular Movies\">\n                        {popular.map(movie => (\n                            <Poster \n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.original_title}\n                                rating={movie.vote_average}\n                                year={movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error} />}\n            </Container>\n        )}\n    </>\n);\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    upcoming: PropTypes.array,\n    popular: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n//axios version @^0.18.0\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"de673ff7f12f1f8ac1034c13231d83e1\",\n        language: \"ko-KR\"\n    }\n});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id => \n        api.get(`movie/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n        }),\n    search: term => \n        api.get(\"search/movie\", {\n            params: {\n                query: encodeURIComponent(term)            \n            }\n        })\n};\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: id => \n        api.get(`tv/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n        }),\n    search: term =>\n        api.get(\"search/tv\", {\n            params: {\n                query: encodeURIComponent(term)\n            }\n        })\n};","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from 'react';\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try {\n            const {\n                data: { results: nowPlaying }\n            } = await moviesApi.nowPlaying();\n            const {\n                data: { results: upcoming }\n            } = await moviesApi.upcoming();\n            const {\n                data: { results: popular }\n            } = await moviesApi.popular();\n\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            });\n            \n        } catch {\n            this.setState({\n                error: \"Can't find movie information.\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        return (\n            <HomePresenter \n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n    <>\n        <Helmet>\n            <title>TV Shows | Netflix</title>\n        </Helmet>\n        {loading ? (\n            <Loader />\n        ) : (\n            <Container>\n                {topRated && topRated.length > 0 && (\n                    <Section title=\"Top Rated Shows\">\n                        {topRated.map(show => (\n                            <Poster \n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average}\n                                year={show.first_air_date.substring(0, 4)}\n                            />\n                        ))}\n                    </Section>\n                )}\n\n                {popular && popular.length > 0 && (\n                    <Section title=\"Popular Shows\">\n                        {popular.map(show => (\n                            <Poster \n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average}\n                                year={show.first_air_date.substring(0, 4)}\n                            />\n                        ))}\n                    </Section>\n                )}\n\n                {airingToday && airingToday.length > 0 && (\n                    <Section title=\"Airing Today\">\n                        {airingToday.map(show => (\n                            <Poster \n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average}\n                                year={show.first_air_date.substring(0, 4)}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error}/>}\n            </Container>\n        )}\n    </>\n);\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        loading: true,\n        error: null\n    };\n\n    async componentDidMount() {\n        try {\n            const {\n                data: { results: topRated }\n            } = await tvApi.topRated();\n            const {\n                data: { results: popular }\n            } = await tvApi.popular();\n            const {\n                data: { results: airingToday }\n            } = await tvApi.airingToday();\n\n            this.setState({ topRated, popular, airingToday }); \n        } catch {\n            this.setState({\n                error: \"Can't find TV information\"\n            });\n        } finally {\n            this.setState({ loading: false });\n        }\n    }\n\n    render() {\n        const { topRated, popular, airingToday, loading, error } = this.state;\n        return (\n            <TVPresenter \n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                loading={loading}\n                error={error}\n            />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({ movieResults, tvResults, loading, error, searchTerm, handleSubmit, updateTerm }) => \n    <Container>\n        <Helmet>\n            <title>Search | Netflix</title>\n        </Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input \n                placeholder=\"Search Movies or TV Shows...\"\n                value={searchTerm}\n                onChange={updateTerm}\n            />\n        </Form>\n        {loading ? (\n            <Loader />\n        ) : (\n            <>\n                {movieResults && movieResults.length > 0 && (\n                    <Section title=\"Movie Results\">\n                        {movieResults.map(movie => (\n                            <Poster \n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.original_title}\n                                rating={movie.vote_average}\n                                year={movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n\n                {tvResults && tvResults.length > 0 && (\n                    <Section title=\"TV Show Results\">\n                        {tvResults.map(show => (\n                            <Poster \n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average}\n                                year={show.first_air_date.substring(0, 4)}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error} />}\n                {tvResults &&\n                  movieResults &&\n                    tvResults.length === 0 &&\n                      movieResults.length === 0 && (\n                        <Message text=\"Nothing found\" color=\"#95a5a6\" />\n                )}\n            </>\n        )}\n    </Container>\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    searchTerm: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading: false,\n        error: null\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if(searchTerm !== \"\") {\n            this.searchByTerm();\n        }\n    };\n\n    updateTerm = (event) => {\n        const {\n            target: { value }\n        } = event;\n        this.setState({\n            searchTerm: value\n        });\n    };\n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n        this.setState({ loading: true });\n        try {\n            const {\n                data: { results: movieResults }\n            } = await moviesApi.search(searchTerm);\n            const {\n                data: { results: tvResults }\n            } = await tvApi.search(searchTerm);\n\n            this.setState({\n                movieResults,\n                tvResults\n            });\n            \n        } catch {\n            this.setState({\n                error: \"Can't find results.\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    };\n\n    render() {\n        const { movieResults, tvResults, loading, error, searchTerm } = this.state;\n        return(\n            <SearchPresenter \n                movieResults={movieResults}\n                tvResults={tvResults}\n                loading={loading}\n                error={error}\n                searchTerm={searchTerm}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";  // public/index.html 변경\nimport Loader from \"../../Components/Loader\";\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    position: relative;\n    z-index: 1;\n    height: 100%;\n`;\n\nconst Cover = styled.div`\n    width: 30%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n    font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n    margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n    font-size: 12px;\n    opacity: 0.7;\n    line-height: 1.5;\n    width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) => \n    loading ? (\n        <>\n            <Helmet>\n                <title>Loading | Netflix</title>\n            </Helmet>\n            <Loader />\n        </>\n    ) : (\n        <Container>\n            <Helmet>\n                <title>\n                    {result.original_title ? result.original_title : result.original_name}{\" \"}\n                </title>\n            </Helmet>\n            <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}/>\n            <Content>\n                <Cover \n                    bgImage={\n                        result.poster_path\n                            ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                            :  require(\"../../assets/noPosterSmall.png\")\n                    }\n                />\n                <Data>\n                    <Title>\n                        {result.original_title\n                            ? result.original_title\n                            : result.original_name}\n                    </Title>\n                    <ItemContainer>\n                        <Item>\n                            {result.release_date\n                                ? result.release_date.substring(0,4)\n                                : result.first_air_date.substring(0, 4)}\n                        </Item>\n                        <Divider>•</Divider>\n                        <Item>\n                            {result.runtime ? result.runtime : result.episode_run_time[0]} min\n                        </Item> \n                        <Divider>•</Divider>\n                        <Item>\n                            {result.genres &&\n                                result.genres.map((genre, index) =>\n                                    index === result.genres.length - 1\n                                      ? genre.name\n                                      : `${genre.name} / `\n                                )}\n                        </Item>\n                    </ItemContainer>\n                    <Overview>{result.overview}</Overview>\n                </Data>\n            </Content>\n        </Container>\n    );\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const {\n            location: { pathname }\n        } = props;\n        \n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n\n    async componentDidMount() {\n        const {\n            match: {\n                params: { id }\n            },\n            history: { push }\n        } = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        if(isNaN(parsedId)) {\n            return push(\"/\");\n        }\n\n        let result = null;\n        try {\n            if(isMovie) {\n                ({ data: result } = await moviesApi.movieDetail(parsedId));\n            } else {\n                ({ data: result } = await tvApi.showDetail(parsedId));\n            }\n        } catch {\n            this.setState({ error: \"Can't find anything\" });\n        } finally {\n            this.setState({ loading: false, result });\n        }\n    }\n    render() {\n        const { result, error, loading } = this.state;\n        return <DetailPresenter result={result} error={error} loading={loading} />;\n    }\n}","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n\n    background-color: rgba(20, 20, 20, 0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid\n        ${props => (props.current ? \"#3498db\" : \"transparent\")};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname }}) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"../Routes/Home/index\";\nimport TV from \"../Routes/TV/index\";\nimport Search from \"../Routes/Search/index\";\nimport Detail from \"../Routes/Detail/index\"\nimport Header from \"./Header\";\n\nexport default () => (\n  <Router>\n    <>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/tv\" exact component={TV} />\n          <Route path=\"/search\" exact component={Search} />\n          <Route path=\"/movie/:id\" component={Detail} />\n          <Route path=\"/show/:id\" component={Detail} />\n          <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";   //styled-components 4.x 버전에서 사용 \n// styled-components 3.x, 2.x 버전에서는 { injecGlobal }로 사용\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 80px;\n    }\n`;\n\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from './Router';\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return(\n     <>\n      <Router />\n      <GlobalStyles />\n     </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}